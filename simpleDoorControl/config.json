{"slots":{"0":{"name":"door","type":{"events":[],"methods":[]}},"1":{"name":"screen","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"for i=1, #screens do\n    screens[i].deactivate()\nend\nfor i=1, #doors do\n    doors[i].deactivate()\nend","filter":{"args":[],"signature":"stop()","slotKey":"-1"},"key":"0"},{"code":"--crappy security watchdog v0.1 by leodr (while sober)\nunit.hide()\n--vars\nlocal debug = false --export: debug functions, to get player id.\nlocal allowedUserIDs = {56008, 00001} --change here the user ids you want to allow.\nlocal playerID = unit.getMasterPlayerId()\nlocal playerName = system.getPlayerName(playerID)\ndoors = {}\nscreens = {}\nlocal htmlHeader = [[<div class=\"bootstrap\" style=\"font-size:8.299561vw; font-family: 'Helvetica'; background-image: url('assets.prod.novaquark.com/73857/55225284-1741-4937-acf5-800244b58dd2.jpg');  background-repeat: no-repeat; background-size: cover;]]\n--\n--functions\nfunction securityCheck()\n    local _allowed = false\n    if #allowedUserIDs > 0 then\n        for i=1, #allowedUserIDs do\n            if allowedUserIDs[i] == playerID then\n                _allowed = true\n            end\n        end\n    else system.print(\"ERROR: No Allowed User IDs defined\") end\n    return _allowed\nend\n    \nfunction getElements()\n    local _doors = {}\n    local _screens = {}\n    for k,v in pairs(unit) do\n        if type(v) == \"table\" and type(v.export) == \"table\" then\n            if v.getElementClass then\n                if v.getElementClass():lower():find(\"door\") then\n                    table.insert(_doors, v)\n                end\n                if v.getElementClass():lower():find(\"screen\") then\n                    table.insert(_screens, v)\n                end\n            end\n        end\n    end\n    if #_doors > 0 and #_screens > 0 then\n         return _doors, _screens\n    else system.print(\"ERROR: No screen/door element found! check setup/links\") end\nend\n\n--main(void) :P\n---\ndoors, screens = getElements()\nif securityCheck() then\n    html = htmlHeader .. [[ color: green;\"> Welcome, ]] .. playerName .. [[</div>]]\n    for i=1, #screens do\n        screens[i].activate()\n        screens[i].setHTML(html)\n    end\n    for i=1, #doors do\n        doors[i].activate()\n    end\nelse\n    html = htmlHeader .. [[ color: red;\">ACCESS DENIED</div>]]\n    for i=1, #screens do\n        screens[i].activate()\n        screens[i].setHTML(html)\n    end\nend\nif debug then\n    system.print(\"User ID: \" .. playerID .. \"  |  User Name: \" .. playerName)\n    end","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":"1"}],"methods":[],"events":[]}
